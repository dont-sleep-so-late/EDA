|PC_conuter
PC[0] <= lpm_counter0:inst.q[0]
PC[1] <= lpm_counter0:inst.q[1]
PC[2] <= lpm_counter0:inst.q[2]
PC[3] <= lpm_counter0:inst.q[3]
PC[4] <= lpm_counter0:inst.q[4]
PC[5] <= lpm_counter0:inst.q[5]
clk => lpm_counter0:inst.clock
clear => lpm_counter0:inst.aclr
aload => lpm_counter0:inst.aload
jump_address[0] => lpm_counter0:inst.data[0]
jump_address[1] => lpm_counter0:inst.data[1]
jump_address[2] => lpm_counter0:inst.data[2]
jump_address[3] => lpm_counter0:inst.data[3]
jump_address[4] => lpm_counter0:inst.data[4]
jump_address[5] => lpm_counter0:inst.data[5]


|PC_conuter|lpm_counter0:inst
aclr => lpm_counter:lpm_counter_component.aclr
aload => lpm_counter:lpm_counter_component.aload
clock => lpm_counter:lpm_counter_component.clock
data[0] => lpm_counter:lpm_counter_component.data[0]
data[1] => lpm_counter:lpm_counter_component.data[1]
data[2] => lpm_counter:lpm_counter_component.data[2]
data[3] => lpm_counter:lpm_counter_component.data[3]
data[4] => lpm_counter:lpm_counter_component.data[4]
data[5] => lpm_counter:lpm_counter_component.data[5]
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]
q[4] <= lpm_counter:lpm_counter_component.q[4]
q[5] <= lpm_counter:lpm_counter_component.q[5]


|PC_conuter|lpm_counter0:inst|lpm_counter:lpm_counter_component
clock => cntr_n1j:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => cntr_n1j:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => cntr_n1j:auto_generated.aload
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => cntr_n1j:auto_generated.data[0]
data[1] => cntr_n1j:auto_generated.data[1]
data[2] => cntr_n1j:auto_generated.data[2]
data[3] => cntr_n1j:auto_generated.data[3]
data[4] => cntr_n1j:auto_generated.data[4]
data[5] => cntr_n1j:auto_generated.data[5]
cin => ~NO_FANOUT~
q[0] <= cntr_n1j:auto_generated.q[0]
q[1] <= cntr_n1j:auto_generated.q[1]
q[2] <= cntr_n1j:auto_generated.q[2]
q[3] <= cntr_n1j:auto_generated.q[3]
q[4] <= cntr_n1j:auto_generated.q[4]
q[5] <= cntr_n1j:auto_generated.q[5]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|PC_conuter|lpm_counter0:inst|lpm_counter:lpm_counter_component|cntr_n1j:auto_generated
aclr => aclr_actual~0.IN0
aclr => effective_clrn[5]~0.IN0
aclr => effective_clrn[4]~1.IN0
aclr => effective_clrn[3]~2.IN0
aclr => effective_clrn[2]~3.IN0
aclr => effective_clrn[1]~4.IN0
aclr => effective_clrn[0]~5.IN0
aclr => _~94.IN0
aload => aclr_actual.IN1
aload => _~50.IN0
aload => _~57.IN0
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
data[0] => _~28.IN1
data[0] => a_data[0]~11.IN1
data[1] => _~27.IN1
data[1] => a_data[1]~10.IN1
data[2] => _~26.IN1
data[2] => a_data[2]~9.IN1
data[3] => _~25.IN1
data[3] => a_data[3]~8.IN1
data[4] => _~24.IN1
data[4] => a_data[4]~7.IN1
data[5] => _~23.IN1
data[5] => a_data[5]~6.IN1
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= safe_q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= safe_q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= safe_q[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= safe_q[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= safe_q[5].DB_MAX_OUTPUT_PORT_TYPE


